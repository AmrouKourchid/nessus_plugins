#%NASL_MIN_LEVEL 80900
##
# (C) Tenable, Inc.
##

include('compat.inc');

if (description)
{
  script_id(210049);
  script_version("1.5");
  script_set_attribute(attribute:"plugin_modification_date", value:"2024/11/04");

  script_cve_id("CVE-2024-49761");
  script_xref(name:"IAVB", value:"2024-B-0163");

  script_name(english:"Ruby REXML < 3.3.9 ReDoS vulnerability");

  script_set_attribute(attribute:"synopsis", value:
"The remote host has an application installed that is affected by information disclosure vulnerability.");
  script_set_attribute(attribute:"description", value:
"The version of the REXML Ruby library installed on the remote host is prior to 3.3.9. It is, therefore, affected by a
ReDoS vulnerability. The vulnerability lies when it parses an XML that has many digits between &# and x...; in a hex
numeric character reference (&#x...;). This does not happen with Ruby 3.2 or later. Ruby 3.1 is the only affected 
maintained Ruby. The REXML gem 3.3.9 or later include the patch to fix the vulnerability.

Note that Nessus has not tested for this issue but has instead relied only on the application's self-reported version
number.");
  script_set_attribute(attribute:"see_also", value:"https://github.com/ruby/rexml/security/advisories/GHSA-2rxp-v6pw-ch6m");
  script_set_attribute(attribute:"solution", value:
"Upgrade to REXML version 3.3.9 or Ruby 3.2 or later.");
  script_set_attribute(attribute:"agent", value:"all");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:N/I:N/A:C");
  script_set_cvss_temporal_vector("CVSS2#E:U/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:U/RL:O/RC:C");
  script_set_attribute(attribute:"cvss4_vector", value:"CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N");
  script_set_attribute(attribute:"cvss4_threat_vector", value:"CVSS:4.0/E:U");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2024-49761");

  script_set_attribute(attribute:"exploitability_ease", value:"No known exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"false");

  script_set_attribute(attribute:"vuln_publication_date", value:"2024/09/10");
  script_set_attribute(attribute:"patch_publication_date", value:"2024/09/10");
  script_set_attribute(attribute:"plugin_publication_date", value:"2024/11/01");

  script_set_attribute(attribute:"plugin_type", value:"local");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:ruby:rexml");
  script_set_attribute(attribute:"stig_severity", value:"II");
  script_set_attribute(attribute:"thorough_tests", value:"true");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"Misc.");

  script_copyright(english:"This script is Copyright (C) 2024 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("ruby_nix_installed.nbin", "unix_enum_sw.nasl", "ruby_modules_nix_installed.nbin");
  script_require_keys("Host/nix/packages", "Host/ruby/modules/enumerated");

  exit(0);
}
include('vcf.inc');
include('ruby.inc');
include('local_detection_nix.inc');

get_kb_item_or_exit("Host/nix/packages");

// Ruby checks
var ruby_info = vcf::get_app_info(app: 'Ruby');
var ruby_version = ruby_info.parsed_version;

var ruby_constraints = [{ 'fixed_version': '3.2' }];

var res = vcf::check_version(version: ruby_version, constraints: ruby_constraints);
if (isnull(res.fixed_version))
{
    audit(AUDIT_INST_PATH_NOT_VULN,'Ruby');
}

// Gem check
var os_pkg = NULL;
var gem_name = 'rexml';

os_pkg = ldnix::search_packages([new('ldnix::pkg_target', 'ruby-' + gem_name, '(ruby(?:gem)?-)' + gem_name)]);
# if the package is found, the host has a version of rexml backported by the OS vendor
if (!empty_or_null(os_pkg) && report_paranoia < 2)
  audit(AUDIT_MANAGED_INSTALL, gem_name + ' Ruby gem');

var gem_list = [];
gem_list = ruby::query_ruby_gem(gem_name:gem_name);
if (empty_or_null(gem_list))
  audit(AUDIT_HOST_NOT, 'affected');

var gem = branch(gem_list);
var gem_info = {
  'app': gem_name,
  'version': gem.module_version,
  'display_version': gem.module_version,
  'parsed_version': vcf::parse_version(gem.module_version),
  'path': gem.module_path
};

var constraints = [
  {'fixed_version': '3.3.9'}
];

vcf::check_version_and_report(app_info:gem_info, constraints:constraints, severity:SECURITY_HOLE);
