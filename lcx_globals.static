#TRUSTED 706cb7fc8baac74008217b4e07e7a8e42a92ce202d9ab7996025b94ad1ae78243f005aa7de00e3ffa9ff4efec22e10fda56a9c35c38c1636f9a9f173ddf84386a7ab31898fd9770d203b728f16fd49f14899bb7a28c38d0fbe6241b81602f04f638f040c9eef15954a0cfe6a7cd62bb83eb8e59df8fc1612d670ce46dbfa274a60252a15d553e0b23917c6a200f2eb446633c078f78cfe85b3e22f9364fcc6a420fd6f65dc29faa448e8683ee7666289bd47300c0582be05c6d7b8772aa3e938551ebba87aebc445536bfd3ae6e193f1b77490c9acdf9d8996d01089d4710444d42c2c9c72fba09495c6d7fd54085011d635edb11af6bbc8637f4772cbdeb08724277103781a4d6267454551f4a9d1639a42463c324124a22ceaebb80432ef92218017ecc8599a653407c0a24258136f9719b79d8f171a134697f4b55bbede215e4744aceceee54482377143cd31c34d9d868c09898e48e30b7ad7054fbb457e96565262aff81ed37d9f057d548e4e383ac0a694a058a9f3601b728296fa918ae2a5166e7d303caa264d67feea3782ff39dc73c8a0dfe0fad0b4532bd29c35a09ca6f7f7e8b72c916013e41d7458217bf6a321534e99ae29a26e69c8d61c66e46148a5d4fb54f615926289a91c37c1dddccbebe29cf084fd4e437d1c2b7688e38ea5aa77be15553a0d045361a7b99d4150fca4277344cef07c3eb037f1efc1dd
##
# (C) Tenable Network Security, Inc.
#
# This script is released under one of the Tenable Script Licenses and may not
# be used from within scripts released under another license without the
# authorization from Tenable Network Security Inc.
#
# @NOGPL@
#
# Revision: 1.3
#
##


namespace lcx {

  # General globals

  ##
  # KB prefix for most local checks KB items
  ##
  global_var KB_PREFIX = "HostLevelChecks/";

  ##
  # KB prefix for third-party patch management checks
  ##
  global_var KB_PM_PREFIX = "ThirdPartyChecks/";

  ##
  # KB key for testing mode
  ##
  global_var KB_TESTING = KB_PREFIX + "testing_mode";

  ##
  # Global var (bool) for testing mode
  ##
  global_var TESTING = FALSE;
  if (get_kb_item(KB_TESTING)) TESTING = TRUE;

  ##
  # Name of plugin metadata cache table
  ##
  global_var _PLUGIN_TBL = "plugin_metadata";
  ##
  # Status of plugin metadata cache table initialization
  # Set by _plugin_tbl_has_inited()
  ##
  global_var _PLUGIN_TBL_INIT;

  ##
  # Name of thirdparty auth results table
  ##
  global_var _AUTH_RESULTS_TBL = "patch_management_auth_results";
  ##
  # Status of third-party patch management auth results table initialization
  # Set by _auth_results_tbl_has_inited()
  ##
  global_var _AUTH_RESULTS_TBL_INIT;

  ##
  # KB key for local checks protocol
  ##
  global_var KB_PROTO = KB_PREFIX + "proto";
  ##
  # KB key for account used for local checks
  ##
  global_var KB_LOGIN = KB_PREFIX + "login";
  ##
  # KB prefix for reports
  ##
  global_var KB_REPORT = KB_PREFIX + "reports/";

  # Protocols

  ##
  # Global var for SMB protocol
  ##
  global_var PROTO_SMB = 1;
  ##
  # Global var for SSH protocol
  ##
  global_var PROTO_SSH = 2;
  ##
  # Global var for SNMP protocol
  ##
  global_var PROTO_SNMP = 3;
  ##
  # Global var for TDS protocol
  ##
  global_var PROTO_TDS = 4;
  ##
  # Global var for RSH protocol
  ##
  global_var PROTO_RSH = 5;
  ##
  # Global var for REXEC protocol
  ##
  global_var PROTO_REXEC = 6;
  ##
  # Global var for RLOGIN protocol
  ##
  global_var PROTO_RLOGIN = 7;
  ##
  # Global var for Telnet protocol
  ##
  global_var PROTO_TELNET = 8;
  ##
  # Global var for localhost/pread()
  ##
  global_var PROTO_LOCAL = 9;
  ##
  # Global var for HTTP protocol
  ##
  global_var PROTO_HTTP = 10;
  ##
  # Global var for HTTPS protocol
  ##
  global_var PROTO_HTTPS = 11;
  ##
  # Global var for HTTP/HTTPS protocol (could be either)
  ##
  global_var PROTO_HTTP_S = 12;
  ##
  # Global var for SOAP protocol
  ##
  global_var PROTO_SOAP = 13;
  ##
  # Global var for IBM iSeries IBMI protocol
  ##
  global_var PROTO_IBMI = 14;
  ##
  # Global var for WMI over DCOM/RPC
  ##
  global_var PROTO_WMI = 15;
  ##
  # Global var for MySQL network protocol
  ##
  global_var PROTO_MYSQL = 16;
  ##
  # Global var for REST protocol
  ##
  global_var PROTO_REST = 17;

  ##
  # Array of protocol names
  ##
  global_var PROTO_NAMES = make_list();
  PROTO_NAMES[PROTO_SMB]    = "SMB";
  PROTO_NAMES[PROTO_SSH]    = "SSH";
  PROTO_NAMES[PROTO_SNMP]   = "SNMP";
  PROTO_NAMES[PROTO_TDS]    = "TDS";
  PROTO_NAMES[PROTO_RSH]    = "RSH";
  PROTO_NAMES[PROTO_REXEC]  = "REXEC";
  PROTO_NAMES[PROTO_RLOGIN] = "RLOGIN";
  PROTO_NAMES[PROTO_TELNET] = "TELNET";
  PROTO_NAMES[PROTO_LOCAL]  = "LOCALHOST";
  PROTO_NAMES[PROTO_HTTP]   = "HTTP";
  PROTO_NAMES[PROTO_HTTPS]  = "HTTPS";
  PROTO_NAMES[PROTO_HTTP_S] = "HTTP/HTTPS";
  PROTO_NAMES[PROTO_SOAP]   = "SOAP";
  PROTO_NAMES[PROTO_IBMI]   = "iSeries";
  PROTO_NAMES[PROTO_WMI]    = "WMI";
  PROTO_NAMES[PROTO_MYSQL]  = "MYSQL";
  PROTO_NAMES[PROTO_REST]   = "REST";

  ##
  # Array of protocol globals
  ##
  global_var PROTO_GLOBALS = make_array(
    "SMB",        PROTO_SMB,
    "SSH",        PROTO_SSH,
    "SNMP",       PROTO_SNMP,
    "TDS",        PROTO_TDS,
    "RSH",        PROTO_RSH,
    "REXEC",      PROTO_REXEC,
    "RLOGIN",     PROTO_RLOGIN,
    "TELNET",     PROTO_TELNET,
    "LOCALHOST",  PROTO_LOCAL,
    "HTTP",       PROTO_HTTP,
    "HTTPS",      PROTO_HTTPS,
    "HTTP/HTTPS", PROTO_HTTP_S,
    "SOAP",       PROTO_SOAP,
    "iSeries",    PROTO_IBMI,
    "WMI",        PROTO_WMI,
    "MYSQL",      PROTO_MYSQL,
    "REST",       PROTO_MYSQL
  );
  ##
  # Array of info_t globals to lcx globals
  # (Initialized below namespace)
  ##
  global_var INFO_T_TO_LCX = make_list();

  # Third-party patch management products
  global_var PM_PROD_VCENTER   = 1;
  global_var PM_PROD_WSUS      = 2;
  global_var PM_PROD_SCCM      = 3;
  global_var PM_PROD_KACE      = 4;
  global_var PM_PROD_ALTIRIS   = 5;
  global_var PM_PROD_SATELLITE = 6;
  global_var PM_PROD_IBM_TEM   = 7;
  global_var PM_PROD_HCL_BIGFIX = 8;

  global_var PM_PROD_NAMES = {};
  PM_PROD_NAMES[PM_PROD_VCENTER]   = "VMware vCenter";
  PM_PROD_NAMES[PM_PROD_WSUS]      = "Windows Server Update Services";
  PM_PROD_NAMES[PM_PROD_SCCM]      = "Microsoft System Center Configuration Manager";
  PM_PROD_NAMES[PM_PROD_KACE]      = "Dell Kace K1000";
  PM_PROD_NAMES[PM_PROD_ALTIRIS]   = "Symantec Altiris";
  PM_PROD_NAMES[PM_PROD_SATELLITE] = "RedHat Satellite 6";
  PM_PROD_NAMES[PM_PROD_IBM_TEM]   = "IBM Tivoli Endpoint Manager";
  PM_PROD_NAMES[PM_PROD_HCL_BIGFIX] = "HCL BigFix";

  global_var PM_PROD_GLOBALS = make_array(
    PM_PROD_NAMES[PM_PROD_VCENTER], PM_PROD_VCENTER,
    PM_PROD_NAMES[PM_PROD_WSUS], PM_PROD_WSUS,
    PM_PROD_NAMES[PM_PROD_SCCM], PM_PROD_SCCM,
    PM_PROD_NAMES[PM_PROD_KACE], PM_PROD_KACE,
    PM_PROD_NAMES[PM_PROD_ALTIRIS], PM_PROD_ALTIRIS,
    PM_PROD_NAMES[PM_PROD_SATELLITE], PM_PROD_SATELLITE,
    PM_PROD_NAMES[PM_PROD_IBM_TEM], PM_PROD_IBM_TEM,
    PM_PROD_NAMES[PM_PROD_HCL_BIGFIX], PM_PROD_HCL_BIGFIX
  );

  # Issue types

  ##
  # Issue type for local checks / patch mgmt error issues
  # - Always reported by hostlevel_check_failed.nasl
  # - May be cleared by certain plugins on success
  #
  # Example: Required command failed with an error, access error
  # preventing local checks from being enabled
  ##
  global_var ISSUES_ERROR    = 1;
  global_var PM_ISSUES_ERROR = 6;
  ##
  # Issue type for local checks / patch mgmt informational issues
  # - Always reported by hostlevel_checks_skipped.nasl
  #
  # Examples: Local checks unavailable, auth OK but unidentified OS
  ##
  global_var ISSUES_INFO    = 2;
  global_var PM_ISSUES_INFO = 7;
  ##
  # Issue type for general service issues - complete failure to
  # connect to the service and authenticate
  # - Generally logged by primary authentication plugins:
  #   ssh_get_info2.nasl, ssh_get_info.nasl, smb_login.nasl, etc
  # - Only reported by hostlevel_check_failed.nasl if ISSUES_ERROR
  #   type issues are also reported or the KB item
  #   Host/local_checks_enabled is NOT set
  #
  # Examples: A protocol error prevented authentication, none of the
  # provided credentials were successful
  ##
  global_var ISSUES_SVC     = 3;
  global_var PM_ISSUES_SVC  = 8;
  ##
  # Issue type for individual errors encountered during authentication
  # attempts by any plugin throughout the scan
  # - Only reported by host_credentials_failed.nasl if there is not
  #   successful auth on the same proto/port
  # - Only reported by authentication_success_intermittent_failure.nasl
  #   if there is successful auth on the same proto/port by the same
  #   user
  # - May be cleared for a proto/port/user on successful auth
  #
  # Examples: Auth failure, KEX failure, protocol failure, failure
  # to open a socket AFTER successful auth has been established on
  # the port
  ##
  global_var ISSUES_AUTH    = 4;
  global_var PM_ISSUES_AUTH = 9;
  ##
  # Issue type for logging auth success - not really an "issue", but
  # uses the same logging framework
  # - Generally logged by primary authentication plugins:
  #   ssh_get_info2.nasl, ssh_get_info.nasl, smb_login.nasl, etc
  # - Reported by authentication_success*.nasl plugins
  ##
  global_var AUTH_SUCCESS    = 5;
  global_var PM_AUTH_SUCCESS = 10;
  ##
  # List of issue types
  # Leaving out AUTH_SUCCESS since it isn't really an issue, it just
  # borrows the framework
  ##
  global_var ISSUES = [
    ISSUES_ERROR,
    ISSUES_INFO,
    ISSUES_SVC,
    ISSUES_AUTH
  ];
  global_var PM_ISSUES = [
    PM_ISSUES_ERROR,
    PM_ISSUES_INFO,
    PM_ISSUES_SVC,
    PM_ISSUES_AUTH
  ];

  # KB Prefixes for issues

  ##
  # KB prefix for local checks / patch mgmt error issues
  ##
  global_var KB_ISSUES_ERROR    = KB_PREFIX + "issues/error/";
  global_var KB_PM_ISSUES_ERROR = KB_PM_PREFIX + "issues/error/";
  ##
  # KB prefix for local checks / patch mgmt informational issues
  ##
  global_var KB_ISSUES_INFO     = KB_PREFIX + "issues/info/";
  global_var KB_PM_ISSUES_INFO  = KB_PM_PREFIX + "issues/info/";
  ##
  # KB prefix for service issues
  ##
  global_var KB_ISSUES_SVC      = KB_PREFIX + "issues/svc/";
  global_var KB_PM_ISSUES_SVC   = KB_PM_PREFIX + "issues/svc/";
  ##
  # KB prefix for auth issues
  ##
  global_var KB_ISSUES_AUTH     = KB_PREFIX + "issues/auth/";
  global_var KB_PM_ISSUES_AUTH  = KB_PM_PREFIX + "issues/auth/";
  ##
  # KB prefix for auth successes
  ##
  global_var KB_AUTH_SUCCESS    = KB_PREFIX + "auth_success/";
  global_var KB_PM_AUTH_SUCCESS = KB_PM_PREFIX + "auth_success/";
  ##
  # Array of issue types to KB prefixes
  ##
  global_var KB_ISSUES = make_list();
  KB_ISSUES[ISSUES_ERROR]  = KB_ISSUES_ERROR;
  KB_ISSUES[ISSUES_INFO]   = KB_ISSUES_INFO;
  KB_ISSUES[ISSUES_SVC]    = KB_ISSUES_SVC;
  KB_ISSUES[ISSUES_AUTH]   = KB_ISSUES_AUTH;
  KB_ISSUES[AUTH_SUCCESS]  = KB_AUTH_SUCCESS;

  global_var KB_PM_ISSUES = make_list();
  KB_PM_ISSUES[PM_ISSUES_ERROR]  = KB_PM_ISSUES_ERROR;
  KB_PM_ISSUES[PM_ISSUES_INFO]   = KB_PM_ISSUES_INFO;
  KB_PM_ISSUES[PM_ISSUES_SVC]    = KB_PM_ISSUES_SVC;
  KB_PM_ISSUES[PM_ISSUES_AUTH]   = KB_PM_ISSUES_AUTH;
  KB_PM_ISSUES[PM_AUTH_SUCCESS]  = KB_PM_AUTH_SUCCESS;

  # Other globals

  ##
  # Store debugging logs to facilitate unit testing
  ##
  global_var DBG_LOG = make_list();
  ##
  # The built-in global SCRIPT_NAME is sometimes unreliable
  # in namespace functions
  ##
  global_var THIS_SCRIPT = SCRIPT_NAME;
  ##
  # Standardized var for unknown items
  ##
  global_var UNKNOWN = "unknown";
}

# Initializing outside namespace as a workaround for issue with
# unreliable globals inside namespaces
lcx::INFO_T_TO_LCX[INFO_LOCAL]  = lcx::PROTO_LOCAL;
lcx::INFO_T_TO_LCX[INFO_SSH]    = lcx::PROTO_SSH;
lcx::INFO_T_TO_LCX[INFO_RSH]    = lcx::PROTO_RSH;
lcx::INFO_T_TO_LCX[INFO_REXEC]  = lcx::PROTO_REXEC;
lcx::INFO_T_TO_LCX[INFO_RLOGIN] = lcx::PROTO_RLOGIN;
lcx::INFO_T_TO_LCX[INFO_TELNET] = lcx::PROTO_TELNET;
