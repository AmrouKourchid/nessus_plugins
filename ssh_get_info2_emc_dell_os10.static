#TRUSTED 214b90efd3197f94190a9ed9cf6ee137b462c634ebca790a62d2fa518ac06130ac37208f95f636bf1ecb8e230351f4a5485ef29a4e06eb434610a2448ff090b882b86715ec3c9fe3e22ff23ef8acd88a81339ca22b2af1ad386f06788563270e04e3c32b5da6f281dabc91f774a0ae60b429542267de7d60043ab4403f840d3a772dcf23ae788bc73916d9c525df5c83ea4f26bd2d0ffc32d28bba1030da538a7e4108ececa8c8d87ef50137d0e39c0f8e079538b109af3d8535721bda76cba5bc89e64a1a18a8224562349bd195abfe46d46e79984b12ca108738534e31a5d7f06742c3da258b81097dbbccf0ce703b0fe2d8f3fa2f6f9f965d61dfd255687e9451f8da759e377111a426d545f61e9ccc6f4d2d39366f5dc86995db87234dff3882c6b926a97d57d3ba50862b2a7374898aba04108b23462c6f6cd90c90ec807a71f85d209d23f8cc88183404f3c582506f4836e276a4022baefc97a994baf199d20b75660a941a7b03d8682a75c3a2a048800b0a5eadc38bd3c203b069bbfa8f79466435ac8cc524a40d0f56a526eeaf7e5cc8a65ee18e249cbc6c8cc8a68746ed7af771aee1c9ff57de637c9672301f955f197bf6edf541352beeebdec5502d95488b04647ed9e113a506ffbd8282e7a8556936bdcc38b4c36d36bd7e8a97676dadbdcea258b99eceb1b5ebc8bee02c4f1cf45858abd989baca5b2fadfa89
#TRUST-RSA-SHA256 67f2f8e137e8310c8a492e7fcc151e3b991cd9f7444180348c1eb6012546820e507bbc4a3164204c59e5c3a1f65784e15eb73978cf8e9e3f77c1aa494a33622f8db17d749f147ed180aa8fea8a16d508ef1996c32c6ae8abf675964982bcb19b55321a0473a489f3ed293578cfe55f5024274c1d3fd23965bdb979f792404f534d11173302e43e2877966b6bbe8b5fb7994381522d4fb8a6f40d03b1d0c88a5e5cd569ef79c731f8f935bd6ce50295c7301cabc6ef74c64de035a74e428065134addf80e76fbf5e83365d00bc71b123cfd12829d7586f1163265ed33e03044d3169b300cb34fef672e52b7e14516e36b51b4eddfef2eeda5d95941fb313c870791bfc1a00a154be580c604bcfa90ffddd213644e60b79ddcbed0d8971edd24b2eea217fa9a6edbb29bb5a8d036e4ebef797b460b27267e66bf1ed3b15a780c74d669c2650d261fdafda1294dcda53f83035583e4b398c1204d760d90595a5a3a01d3650277f71428b7b8d494507b2f492664d4bfce0cba4fccdbdae9fc865deb1fd365cd9178101eb09386f756070cc462d7512d40fc569451273336ca8bcdf4f67fc70fbfb6d3eb2f63dfa6b368c5fa98b2fa5522b7fb64802989b348586f9be01ceb83c1c9b7541e940510f78090248d2d347bad9ff3a878190daa8e3accd66e7f82d4a68cc81ccad1214533f460353c4b6b98fd2eae440cf6c24f4ee0ce94

# (C) Tenable Network Security, Inc.
#
# This script is released under one of the Tenable Script Licenses and may not
# be used from within scripts released under another license without the
# authorization from Tenable Network Security Inc.
#
# Revision: 1.9
#
# Notes:
#   This handler covers detection of Force10 Networks switches
#   previously covered by ssh_get_info.nasl as well as its successors:
#      Dell FTOS OS9, and
#      EMC Dell Smart-Fabric OS10
#

function dell_os10_pre_check_fail()
{
  # have we already checked that the host is not a Dell OS10 switch?
  if(host_info_key_val['host_not_dell_os10'])
    return TRUE;

  if(!empty_or_null(host_info_key_val['showversion_unrecognized']) &&
     host_info_key_val['showversion_unrecognized'] !~ dell_os10_check['test_cmd_regex'])
    return TRUE;

  # Not Dell OS10 switch if one of the following devices
  if (is_cisco_firepower() ||
      is_cisco_ssh() ||
      is_cisco_nxos() ||
      is_timos_userauth() ||
      is_cisco_ucos() ||
      is_huawei() ||
      is_panos() ||
      is_acos() ||
      is_adtran() ||
      is_asyncos() ||
      is_staros() ||
      is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
  {
    return TRUE;
  }

  return FALSE;
}

#
# callback for systems with
#   "Force10 Networks Real Time Operating System Software",
#   "Dell(?: EMC)? Real Time Operating System Software", or
#   "Dell EMC Networking OS10 Enterprise"
# in show version
#
function handle_dell_os10(session, use_shell_handler, &channel, cmd_res)
{
  #Local checks just means we can run commands on the target host.
  sshlib::set_support_level(level:sshlib::SSH_LIB_LOCAL_CHECKS_UNAVAILABLE);
  report += '\nLocal checks have been enabled for this host.';
  replace_kb_item(name:"Host/Force10/show_version", value:cmd_res);

  var dell_ftos;
  var match;
  var ver_line;
  var version;

  if("Force10 Networks Real Time Operating System Software" >< cmd_res)
  {
    dell_ftos = "Dell Force10 Operating System";
    ver_line = pgrep(pattern:"Application Software Version: ", string:cmd_res);
    match = pregmatch(pattern:"Force10 Application Software Version: +([0-9][0-9.]+) *[\r\n]", string:ver_line);
  }
  else if(cmd_res =~ "Dell(:? EMC)? Real Time Operating System")
  {
    dell_ftos = "Dell Real Time Operating System";
    ver_line = pgrep(pattern:"Application Software Version: ", string:cmd_res);
    match = pregmatch(pattern:"Dell EMC Application Software Version: +(\d+-\d+(?:\(\d+-\d+\))?) *[\r|\n]", string:ver_line);
  }
  else if("Dell EMC Networking OS10 Enterprise" >< cmd_res)
  {
    dell_ftos = "Dell EMC Networking OS10 Enterprise";
    ver_line = pgrep(pattern:"Build Version: ", string:cmd_res);
    match = pregmatch(pattern:"Build Version: +([0-9.]+) *[\r|\n]", string:ver_line);
  }

  if(!isnull(match) && !isnull(match[1]))
    version = match[1];

  if(empty_or_null(dell_ftos) || empty_or_null(version))
  {
    var failure_kb_msg = 'The remote host appears to be running Force10, Dell FTOS, or\n' +
                         'Dell EMC Networking OS10 Enterprise.\n' +
                         'However, something went wrong when we tried to capture the output of\n' +
                         'the "show version" command.';

    failure_kb_type = lcx::ISSUES_INFO;
    report += '\n' + failure_kb_msg + '\n';
    return TRUE;
  }

  dell_ftos += ' ' + version;

  report += '\nAlthough OS Security Patch Assessment for ' + dell_ftos +
            '\nis not supported, Nessus has managed to run commands in support' +
            '\nof OS fingerprinting.\n';

  replace_kb_item(name:"Host/OS/showver", value:dell_ftos);
  replace_kb_item(name:"Host/OS/showver/Confidence", value:100);
  replace_kb_item(name:"Host/OS/showver/Type", value:"switch");
}

#
# callback for systems that where 'show version' does not match CNU-OS regex
#
function handle_not_dell_os10(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  if(!empty_or_null(cmd_res))
  {
    replace_kb_item(name:"Host/showversion", value:cmd_res);

    # store more details for other handlers to use
    host_info_key_val['showversion_unrecognized'] = cmd_res;
    host_info_key_val['host_not_dell_os10'] = TRUE;
  }
}
