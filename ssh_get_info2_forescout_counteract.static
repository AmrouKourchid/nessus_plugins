#TRUSTED 7f2ddaf19b0598881e937bfeeff3560392bf6447fcfc9567667f91881b2cb4fe99da21f7ce662f87c174026341cade4b4ffbcb53ee6f9d908e32f9cf2b6a5ca3721d334115a1dccd279fd2d95ea347565067a113c66424ed2b7fef0df96c7b4bff803e61a32c1943363e8302455aa15e65c76b05c206b56b2fb1186301a0a9378bda2091abab1d7b7b1477486030d93e349c95930b0938696a2bc3fdf32d4eb8ec0bf7939b12ff918a483ffdcc08cc70c8922078a71b484c19b1b304646cf7a3665d62f0c6f7ff5cbc5f4e26cfded5acd9ed6a2a515536245f27f590f6bf4a2eb812cc835044c1103712818035985101be622b16312469aacb6e316ce3aba2b55962397298e9faab764a814bb4be10c58aee964e95cf0f62a650c748ba1243b8611ce429926422000ea8e0f107afa297b526c5c1cd555e410f6fab9faa0ef840d7c5341adab793b2ecd70e4aaf878d3ef38b1ad10a5df5fdf658a208fd1108733a8146d19117425d38ef2c3d634483e5635c450d510186f02ef0f71dc198ca53982f9d6f0179eab7b1fdd68a9a70daa67e5221678950094b3bd8a8fa630f8488c975e2eabe765694837b08ea7bcecc24ab80963a5e56b4edfe644871fe9065be6de229e821d91c1be9ab2e367fc82471bebbbf0c17643b3d546dc2e18bb1d04704d289698ffd581bd7c4d749585054d0e8c074e3a2a0e1bdbe123122eab79723
#TRUST-RSA-SHA256 45f9652adae14e0be06ed38198a32b79e008ec835ddfcf8bd0fe0c5dde349980fffe10cf83eb232216bc96212e3a993b23e8210bbfd784785195832fbcfb3df6950892831037513d8692559c4674aa1289a6ca6a14dbd8036763dc03664f79aebb4906f64b4f4d9e650f6d02f9b9860dfd89dbb5534932b6c309b9e9efe650c6211a2761617529ecdbea6408e72f17a777499561d52dafe8cfaa4f2983515c1d0378222cc9517797379928324b35d8fcd96c92ec6f742e65d94a7f71e67607361ce99310371fb617a520db9241fe9ad6fa6d0474b3613bfcbcfee3ab0503db03c28b203cdc74fb55f09502e44a69f03139c2a8087db089a1183cc6f8dda29108206f18ef03319a88041d4839bb69727b471b7d4549250d6f596fd1c01b1af2e86d12f6c0dffe764ad02a4abf898ae2d69d282409ff08c4bdfbc9d5653a0ba763b40b60c96d5bb94035fd5fd017d22d11dab145dca4afff1b70e20ae4bfb781a7f62c94d53343a232cdb3e7c45efc667aca0b84a569923a8fac1c93d2c3bcea54e0d268810801497c7e49ba33fe96064acc366210c399c770fff6d9204083af8731fa3457d0c1555ba252b5acdaaa8783b348bd72bc38638ab972486f963e3adebd9c4e9fcef1565d4ceab7d7269f60861df296774b9aecbaed214f256d1932888cac42330d1b3d0e4152e18e97c010ea1b2e2f257d69f294775b67821439aa5e
##
# (C) Tenable, Inc.
#
# Check host information for indicates the device OS is a supported ForeScout CounterACT OS.
##
function is_forescout_counteract()
{
  if (get_kb_item('Host/OS/Forescout/CounterACT') == TRUE) return TRUE;
  return FALSE;
}

##
# Check if the device is ForeSout CounterACT based on information collected
##
function forescout_counteract_pre_check_fail()
{
  dbg::detailed_log(lvl:1, src:FUNCTION_NAME, msg:'forescount_counteract_pre_check_fail()');
  if(host_info_key_val['host_not_forescout_counteract']) return TRUE;

  # Check uname output for errors or mismatch
  if(uname_error_or_mismatch(regex:forescout_counteract_check['test_cmd_regex']))
    return TRUE;

  if (is_cisco_ssh() ||
      is_cisco_nxos() ||
      is_cisco_firepower() ||
      is_timos_userauth() ||
      is_huawei() ||
      is_panos() ||
      is_acos() ||
      is_adtran() ||
      is_asyncos() ||
      is_staros() ||
      is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
    return TRUE;

  return FALSE;
}

##
# Runs ForeScout CounterACT assessment commands
#
# @param   session              Session object associated with connection
# @param   use_shell_handler    Shell handler information for commands to be run
# @param   channel              Address of channel object associated with connection
# @param   cmd_res              The command result
#
# @return  TRUE
##
function handle_forescout_counteract(session, use_shell_handler, &channel, cmd_res)
{
  if ('CounterACT Appliance version information' >!< cmd_res) return FALSE;
  replace_kb_item(name:'Host/OS/Forescout/CounterACT', value:TRUE);

  var version = 'unknown';
  var match = pregmatch(string:cmd_res, pattern:"\nVersion\s*?:\s*?(\d+(?:\.\d+){0,3})");
  if (match) version = match[1];
  replace_kb_item(name:'Host/OS/Forescout/CounterACT/version', value:version);

  var os_ver = 'Forescout CounterACT';
  if (version != 'unknown') os_ver = strcat(os_ver, ' ', version);
  replace_kb_item(name:'Host/OS/version', value:os_ver);
  replace_kb_item(name:'Host/OS/version/Confidence', value:100);
  replace_kb_item(name:'Host/OS/version/Type', value:'embedded');

  sshlib::enable_local_checks();
  replace_kb_item(name:'debug/Host/local_checks_enabled_source/includes/ssh_get_info2_forescout_counteract.static', value: 74);
  report += strcat('\nLocal checks have been enabled for ', os_ver);
  return TRUE;
}

##
# Callback for non ForeScout CounterACT OSes
##
function handle_not_forescout_counteract(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  if (!empty_or_null(cmd_res)) host_info_key_val['host_not_forescout_counteract'] = TRUE;
}

