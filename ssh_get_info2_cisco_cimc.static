#TRUSTED 12c421aca3a6243dcdc66d7da4e0efc6438a03b836eca11ec7f7499bc052368b3a0997f87b8b92ae77941b8472aa9665d50d38778e22193aa399296686908a310bd2935aaca3ecbbd02988ea102954e9224677f658d517509a230e5fc402a35d077041c896e1679fa2d24bca18f81c3e157338370a91eafe9bb471f7b46802a70b8435750db5795095e31835ddfbc19f5b11087291bb58a3efc39c5657bf46b4959e6f699763d2b1093422799d8b2a7d4b7bee70e3aa50511db4effb71627e5babcbbd6d4f9ce0dd33393d924b17422ad4ad2361a5d3d8a43c1f1799a33588d4a1f462deb833f3561d3ac8641cedc74b2419d102d1f3d22676527840799743e0b66b43defaa43a1d36c5d5cbfb5a87ca524db553a0a9220b836cdebf84fdccc46e3932b4dba1c164774fad88d08c3f4982d0a955387ebdfab487a34669d601876fc2331a5bcc36fc5122290bd61905f91734a52eadd6980dfda82c6e639adb9eb4cfcaf190d7090f9f13f6c7305b5ae41cec878553560c082ad75ec9962fd9b62b48bc00f507176f0e8850c4e987033c549ff30f2c0f55fbff463de569594eb878c445b283d07f339fd627191afcf98c6f377da8686cffc92c0da08dec693f62889fec1bf42a68c01ea3fc1825e85b39ab2f813fc404d045010f561180058b054339f3321654537590f8fe0c347026ec783ced5c9bef5013613ec2816a1d579a
#TRUST-RSA-SHA256 97b12836c0c2dc210fad1fe07fe0e12f925de4f1093c508be456681eecd5ade885cabb61803f4b8bd48e6f9470452d466e0e07b39c8c5c0d9b22afdd5bf8e3092d2b0c089f089441a01a231e9cb279e50b5a07763be31589941cfda73f59977a97c31283748823cddcb462e9933847b6a8312cdced464c3f8ccc4cce02b01973d76176085f31e9b74b4ad90575ff5f24fb681f4fc7d2e0c49620983b2463391f6029ee100e71822ce09d7e37365794830d9cfc5d7644bfbd11b62ff7e3616342eabaf7883ed171b5ef8a4db4690fe89fde4d1aacb97aa18ff6f30bf66a91299d59cae8b84dfc4db48c7ee65f1f728300f8255459886a584fa039ee8936c17ea02bd2b44bdd38a7ed80fe033baf972d2afb21e7052aad691d29444a692c37f0da2cb63e070a572e0728844aa32bb860c2b149a3fa2baafb73e51823e9dd6146c024ef583c0bcb81110628b4d44bca7a7c59ced07c2632d1bcae2e9c7454058ea098f2f5a68e042e73b131977c8c392c8af94993344e489a72ee6d235cb1dd801050c534fcc230fbeae650780f9911fab00bd38fd7695b2844294b5c88073a66c689394d91d966574389461e8194ad5b2d0f29cac1fda4a1465ea392f9e955c2330412a6a973afac978e90e0856ec9cf4240c781ebd32e957e5e324b5d95d24dd7a3aa5a84a00cc62cdf730fe7011dd87f66bc455fb79855ec2478720314e7283e

# (C) Tenable Network Security, Inc.
#
# Revision: 1.10

# If we already know our target isn't Cisco CIMC, move on with our lives
function cisco_cimc_pre_check_fail()
{
  if(host_info_key_val['host_not_cimc'])
  {
    # already checked that host is not cimc, no need to check again
    return TRUE;
  }

  if(!empty_or_null(host_info_key_val['showcimc_unrecognized']) &&
     host_info_key_val['showcimc_unrecognized'] !~ cimc_check['test_cmd_regex'])
    return TRUE;

  if (is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
    return TRUE;

  return FALSE;
}

function handle_cisco_cimc(session, use_shell_handler, &channel, cmd_res)
{
  local_var buf, match, cimcver;
  # Firmware version will be in the form 1.0(1b) or 1.0(1) or 1.0(0.86b) ect
  if (cmd_res) match = pregmatch(string:cmd_res, pattern:'\n'+"(\d+\.\d+\([0-9.]+[A-Za-z]?\))\s+");
    else match = NULL;


  if (!isnull(match))
  {
    cimcver = match[1];
    set_kb_item(name:"Host/Cisco/CIMC", value:TRUE);
    set_kb_item(name:"Host/Cisco/CIMC/show_cimc", value:cmd_res);
    set_kb_item(name:"Host/Cisco/CIMC/version", value:cimcver);

    set_kb_item(name:"Host/OS/showver", value:"Cisco Integrated Management Controller "+cimcver);
    set_kb_item(name:"Host/OS/showver/Confidence", value:100);
    set_kb_item(name:"Host/OS/showver/Type", value:"embedded");
    report += '\n' + 'Local checks have been enabled for Cisco Integrated Management Controller.\n';
    sshlib::enable_local_checks();
    replace_kb_item(name:'debug/Host/local_checks_enabled_source/includes/ssh_get_info2_cisco_cimc.static', value: 52);
  }
  else
  {
    return FALSE;
  }


  # try show chassis for more detail
  buf = run_command(
          cmd:"show chassis",
          session:session,
          use_shell_handler:use_shell_handler,
          channel:channel);

  # Sanity check and check for known headers of show chassis output
  if ("% invalid command detected at '^' marker" >!< buf &&
    "PID" >< buf && "UUID" >< buf && "Product Name" >< buf)
  {
    set_kb_item(name:"Host/Cisco/CIMC/show_chassis", value:buf);
  } 

  report += '\n' + 'OS Security Patch Assessment is available for Cisco Integrated Management Controller.\n';
  security_note(port:0, extra:report);

  return TRUE;
}

function handle_not_cisco_cimc(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  if(!empty_or_null(cmd_res))
  {
    replace_kb_item(name:"Host/showcimc", value:cmd_res);
    # store more details for other handlers to use
    host_info_key_val['host_not_cimc'] = TRUE;
    host_info_key_val['showcimc_unrecognized'] = cmd_res;
  }
}
