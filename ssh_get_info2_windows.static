#TRUSTED 48ae2c06aa2f5b19d4bac7b2c6420b6a0d07f893865bf1558bb9f61498e91135f5b7e801641b004831b426e3e526e085577c14da3ec6db472553f25a3436232d76c529fa6dd5cc694d01694b4a3f73e07464236581ca18ec8f0eec3c25958e1d4467fa0b64ea7d1061db51b66fb6f5ce3ef5fbe08c9b7402573bf9a9aff048e2c9fb12d139ee9373c40b48dbdad5a91ed34ccf49ac948fabcc77237b12aed91aa16f07d8307cc8bbb363dcbd675979f7cc49d900e1b38b91343d399eb3f99fe3efa4ca2eb750e2f62a99a78d407cf7e9470ae5255fcb74cdb7d8c54dd9ac7477bfcfb1798dcad59bf26ff9c7d3f1f7c0e606964326897d662f183a65008bc7e1281271b8afedcb2ac823161f272feb680766a7fc4ea8df4e2c9427da575baaa4ac2e06969de3c8f01fd848a5f06569ea07d8479e719e16a1037a15996f6cf3d8fe34c7cc38fb9bb68bad54b9e2d1adf1ca658e7323d148c951dffb29e92d6eb2c3b5031181654fced6455201d4fe200f8600f8f696dffdcdece148002b979802338496a8fab28bee82243afd2135bab969ff57c17e6a4cfc10485fdc498acc6ea01ac43fb6b9ad8e9a7f0d1e66fcdabd718c81726288361a4bb12b3528cce2aa0dda683cc309b2f1989ddecb98ee03297c2cc1c2562df2267cd1bf1d3783ff2d4ce05dfd583d46ae07cb306c416ba88b01d41973fa23f1bb6f44b7b8b96a992c
#TRUST-RSA-SHA256 3b055468b25fe8991f9b5d3dcf383bab09d9579188809f5e0239eff7914b010d1dc244626505f9e33f5320d000317f2bb07901f92c9a567bf8f6f60f8eb6e22a0aa8e79cf0dbce604efd1665e557311ee9590a1bf3bc03eb30eaa056c11e74a48842f923afbddf339624cd7e8c5cfef13d37fd5253a292a7f75c7fef9f635e26315f48a161d756f3caa5a2c429511bf7ae0767465c36a8145ef0f04aa3e76c2ee184474914ed74a892f65eaafb3a7ea386c05713158dabbf9e45f37f2d79ca50a198c896870b6310623f2751a3f553d5691b4ff7bea4878cb9c8005ef2416dcda44fc917ddc7e7d52c0fb2b4f96cf4ae0258d735f7e1a410417b4ef342e63f81fda78f139059c850809c35127d674885d2bb0b3769f39a9046abfe2779937a4e40910e48f9c0f8e8e1042518d6ef49bb98f638953d337679d62e0cd896eed871a83d45bfce305894dc2f5dd374aa13edc696179af91b4196b7c48b2079d474aefcc514af5d91486630c8ce5c04802dd620554e5884bb616ed2c3cc35f710088221f56084b68f19df40ea0bf70719c30a502efcd27b2c3486457eb0fb7bcd9056f7e7a7c4a2d94401bb5e23d3804f277ef8ffe040f0dc74103d97012065f0905bd6c6cb9f65ed040808dca236628e551e5ac60ca3b2ac98dec580d951978a5243a82c4216c4c62a811f05ef12d16b4d67aa1bfb2ce15f3cbcd055bc807f0e5301

# (C) Tenable Network Security, Inc.
#
# This script is released under one of the Tenable Script Licenses and may not
# be used from within scripts released under another license without the
# authorization from Tenable Network Security Inc.
#
# Revision: 1.014

#
# windows_pre_check_fail
# check if this is a windows device based on information collected
#
function windows_pre_check_fail()
{
  # have we already checked that the host is not windows?
  if(host_info_key_val['host_not_windows'])
    return TRUE;

  if(!empty_or_null(host_info_key_val['cmd_c_ver_unrecognized']) &&
     host_info_key_val['cmd_c_ver_unrecognized'] !~ windows_check['test_cmd_regex'])
    return TRUE;

  # Not Windows if one of the following devices
  if (is_cisco_firepower() ||
      is_cisco_ssh() ||
      is_cisco_nxos() ||
      is_cisco_ucos() ||
      is_huawei() ||
      is_panos() ||
      is_acos() ||
      is_adtran() ||
      is_asyncos() ||
      is_staros() ||
      is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
  {
    return TRUE;
  }

  return FALSE;
}

#
# callback for systems with "Microsoft Windows..." in 'cmd /C ver'
#
function handle_windows(session, use_shell_handler, &channel, cmd_res)
{
  failure_kb_msg =
    'Credentialed checks of Windows are not supported using SSH.';
  failure_kb_type = lcx::ISSUES_INFO;
  report += '\n' + failure_kb_msg + '\n';

  sshlib::set_support_level(level: sshlib::SSH_LIB_SUPPORTS_LOGIN);
}

#
# callback for systems without "Microsoft Windows..." in 'cmd /C ver'
#
function handle_not_windows(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  if(!empty_or_null(cmd_res))
  {
    # store more details for other handlers to use
    host_info_key_val['host_not_windows'] = TRUE;
    host_info_key_val['cmd_c_ver_unrecognized'] = cmd_res;
  }
}
