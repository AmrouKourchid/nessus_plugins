#%NASL_MIN_LEVEL 80900
##
# (C) Tenable, Inc.
##

include('compat.inc');

if (description)
{
  script_id(215502);
  script_version("1.2");
  script_set_attribute(attribute:"plugin_modification_date", value:"2025/03/13");

  script_cve_id("CVE-2024-45337");

  script_name(english:"Azure Linux 3.0 Security Update: cert-manager / cf-cli / docker-buildx / docker-compose / moby-compose / moby-engine / packer (CVE-2024-45337)");

  script_set_attribute(attribute:"synopsis", value:
"The remote Azure Linux host is missing one or more security updates.");
  script_set_attribute(attribute:"description", value:
"The version of cert-manager / cf-cli / docker-buildx / docker-compose / moby-compose / moby-engine / packer installed on
the remote Azure Linux 3.0 host is prior to tested version. It is, therefore, affected by a vulnerability as referenced
in the CVE-2024-45337 advisory.

  - Applications and libraries which misuse connection.serverAuthenticate (via callback field
    ServerConfig.PublicKeyCallback) May be susceptible to an authorization bypass. The documentation for
    ServerConfig.PublicKeyCallback says that A call to this function does not guarantee that the key offered
    is in fact used to authenticate. Specifically, the SSH protocol allows clients to inquire about whether a
    public key is acceptable before proving control of the corresponding private key. PublicKeyCallback May be
    called with multiple keys, and the order in which the keys were provided cannot be used to infer which key
    the client successfully authenticated with, if any. Some applications, which store the key(s) passed to
    PublicKeyCallback (or derived information) and make security relevant determinations based on it once the
    connection is established, May make incorrect assumptions. For example, an attacker May send public keys A
    and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then
    with B. A vulnerable application May then make authorization decisions based on key B for which the
    attacker does not actually control the private key. Since this API is widely misused, as a partial
    mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via
    public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the
    connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that
    the client May still not control the last key passed to PublicKeyCallback if the connection is then
    authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or
    NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various
    authentication callbacks to record data associated with the authentication attempt instead of referencing
    external state. Once the connection is established the state corresponding to the successful
    authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party
    libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party
    libraries should refer to the relevant projects for guidance. (CVE-2024-45337)

Note that Nessus has not tested for this issue but has instead relied only on the application's self-reported version
number.");
  script_set_attribute(attribute:"see_also", value:"https://nvd.nist.gov/vuln/detail/CVE-2024-45337");
  script_set_attribute(attribute:"solution", value:
"Update the affected packages.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:C/I:C/A:N");
  script_set_cvss_temporal_vector("CVSS2#E:POC/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:P/RL:O/RC:C");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2024-45337");

  script_set_attribute(attribute:"exploitability_ease", value:"Exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"true");

  script_set_attribute(attribute:"vuln_publication_date", value:"2024/12/11");
  script_set_attribute(attribute:"patch_publication_date", value:"2025/01/14");
  script_set_attribute(attribute:"plugin_publication_date", value:"2025/02/10");

  script_set_attribute(attribute:"plugin_type", value:"local");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-acmesolver");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-cainjector");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-cmctl");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-controller");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-debuginfo");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cert-manager-webhook");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:cf-cli");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:docker-buildx");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:docker-buildx-debuginfo");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:docker-compose");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:docker-compose-debuginfo");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:moby-compose");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:moby-engine");
  script_set_attribute(attribute:"cpe", value:"p-cpe:/a:microsoft:azure_linux:packer");
  script_set_attribute(attribute:"cpe", value:"x-cpe:/o:microsoft:azure_linux");
  script_set_attribute(attribute:"generated_plugin", value:"current");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"Azure Linux Local Security Checks");

  script_copyright(english:"This script is Copyright (C) 2025 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("ssh_get_info2.nasl");
  script_require_keys("Host/local_checks_enabled", "Host/AzureLinux/release", "Host/AzureLinux/rpm-list", "Host/cpu");

  exit(0);
}
include('rpm.inc');

if (!get_kb_item('Host/local_checks_enabled')) audit(AUDIT_LOCAL_CHECKS_NOT_ENABLED);
var release = get_kb_item('Host/AzureLinux/release');
if (isnull(release) || 'Azure Linux' >!< release) audit(AUDIT_OS_NOT, 'Azure Linux');
var os_ver = pregmatch(pattern: "Azure Linux ([0-9]+(\.[0-9]+)?)", string:release);
if (isnull(os_ver)) audit(AUDIT_UNKNOWN_APP_VER, 'Azure Linux');
os_ver = os_ver[1];
if (! preg(pattern:"^3([^0-9]|$)", string:os_ver)) audit(AUDIT_OS_NOT, 'Azure Linux 3.0', 'Azure Linux ' + os_ver);

if (!get_kb_item('Host/AzureLinux/rpm-list')) audit(AUDIT_PACKAGE_LIST_MISSING);

var cpu = get_kb_item('Host/cpu');
if (isnull(cpu)) audit(AUDIT_UNKNOWN_ARCH);
if ('x86_64' >!< cpu && cpu !~ "^i[3-6]86$" && 'aarch64' >!< cpu)
  audit(AUDIT_LOCAL_CHECKS_NOT_IMPLEMENTED, 'Azure Linux', cpu);

var pkgs = [
    {'reference':'cert-manager-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-acmesolver-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-acmesolver-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-cainjector-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-cainjector-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-cmctl-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-cmctl-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-controller-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-controller-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-debuginfo-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-debuginfo-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-webhook-1.12.13-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cert-manager-webhook-1.12.13-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cf-cli-8.7.3-4.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'cf-cli-8.7.3-4.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-buildx-0.14.0-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-buildx-0.14.0-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-buildx-debuginfo-0.14.0-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-buildx-debuginfo-0.14.0-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-compose-2.27.0-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-compose-2.27.0-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-compose-debuginfo-2.27.0-2.azl3.cm3', 'cpu':'aarch64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE},
    {'reference':'docker-compose-debuginfo-2.27.0-2.azl3.cm3', 'cpu':'x86_64', 'release':'3.0', 'rpm_spec_vers_cmp':TRUE}
];

var flag = 0;
foreach var package_array ( pkgs ) {
  var reference = NULL;
  var _release = NULL;
  var sp = NULL;
  var _cpu = NULL;
  var el_string = NULL;
  var rpm_spec_vers_cmp = NULL;
  var epoch = NULL;
  var allowmaj = NULL;
  var exists_check = NULL;
  var cves = NULL;
  if (!empty_or_null(package_array['reference'])) reference = package_array['reference'];
  if (!empty_or_null(package_array['release'])) _release = 'Azure Linux ' + package_array['release'];
  if (!empty_or_null(package_array['sp'])) sp = package_array['sp'];
  if (!empty_or_null(package_array['cpu'])) _cpu = package_array['cpu'];
  if (!empty_or_null(package_array['el_string'])) el_string = package_array['el_string'];
  if (!empty_or_null(package_array['rpm_spec_vers_cmp'])) rpm_spec_vers_cmp = package_array['rpm_spec_vers_cmp'];
  if (!empty_or_null(package_array['epoch'])) epoch = package_array['epoch'];
  if (!empty_or_null(package_array['allowmaj'])) allowmaj = package_array['allowmaj'];
  if (!empty_or_null(package_array['exists_check'])) exists_check = package_array['exists_check'];
  if (!empty_or_null(package_array['cves'])) cves = package_array['cves'];
  if (reference && _release && (!exists_check || rpm_exists(release:_release, rpm:exists_check))) {
    if (rpm_check(release:_release, sp:sp, cpu:_cpu, reference:reference, epoch:epoch, el_string:el_string, rpm_spec_vers_cmp:rpm_spec_vers_cmp, allowmaj:allowmaj, cves:cves)) flag++;
  }
}

if (flag)
{
  security_report_v4(
      port       : 0,
      severity   : SECURITY_HOLE,
      extra      : rpm_report_get()
  );
  exit(0);
}
else
{
  var tested = pkg_tests_get();
  if (tested) audit(AUDIT_PACKAGE_NOT_AFFECTED, tested);
  else audit(AUDIT_PACKAGE_NOT_INSTALLED, 'cert-manager / cert-manager-acmesolver / cert-manager-cainjector / etc');
}
