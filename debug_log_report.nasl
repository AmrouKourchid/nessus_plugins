#TRUSTED a2ceb0eea4143279c06b9421bc61ded9f8e5dd0d1bea10ede65d4d1589358ebea26f4a37900a423183b77eacc3ce6b859ce992f435219aa649e9ee50dfdb7bd8fb4f4df2876c7f7bf9e017fe7036bb381a24451480630e3673d7ea45f6744765c2a70ff232f4b24eebc6d7a63e07badeffd6a83b9fbc532c230bdec9a274a7c045a5d3598a1c73bfc73fcb1017ef5513d6af7ad2448719290f99f9b8aaabafd1a32d848fc6fbb44417c78e637dd0a9e49cfa88d880b45bb52e1083ce64bde40fab8aa7a5686c16716b536cd6f82d26c276157d35dd2ff76e8683d90edb6855bd496274296deba6655dfb11f6dca8ac4b52d75ef6b44fd3a83428a5420b7159dde6a54d626d5ddc7ea946c3de56ee0e1f21e4972364342a8afd8487b6ac578d20ef9bc5229be5a4fc457a9b96a73206f67fc628115488e445672fad1ea531d6a31a49da70e3e24af18f81e6b311a5269a96cb7a637c6616385ca1c2cd26d7de5f8d36c003d2691267f57f7246dfb6a4f4ea6611c1a1be467a5fb08339d102cbed239e70d6fc91998ed895d2d35cee3315cc9ed0f9ce95a13494857f7563436191c65d15d85239e563e5eb9048c050ca5d5dc16914f238704b6291dfd039c68fb0192e4870567916c3abc009e244663883a14eaf961996e3268c3aae7ecd63274043d9741e2ddb33105940a1d8e1a9c1238fdd154fcbb290eead222fe33d9c0b4d
#TRUST-RSA-SHA256 0b8d12052bf3847668e758bc3c278d936709c28cdbf8d9dabc1fd2c75fd83e56ee671e46c3f3f74a99088ab0ff37f5fbd18dfe7b1c0faf520e06ca2b4892ce7fd8d38aed3cc4176cb0788521cfe8cb7e59bafd61a6e99f43e5d38ffa4af3bf845d215427dd30f5863c600412953b12f15ce0aa0c4c52515ba182c5126281e988ab356218bd642bbd909cf90a58ccd4dad933e97895baaa3ef7bba92df7756f71724dea594d017d036bb0702795020f41514b70f540a5900d85e96e94832316869d569fc300407060730269530a10f9b9624b282ec60b8deeb42c99e07f676e28417ddb5954eabfdb119f1c8c44e190a47f765a6b82f33d28e0461f61af29194cfc476b3f4cdc868e39c1031fc232a70385e11c72c2b553ec90963e16c2c456a443c3b027606aac17f06d7c90e88938abae935c4d8f13d76ab0141819d095bc0cd66ff9a43377303374ba005d312553e907dbf274403bb318f587d7720a07f919c7565ac2ae5f3673b71c3989dcafb7ec5bf580d81d7d48895461add52cc4201aaf6f87ac286ac33b3ecbc638806a225c86422ab1846e01536af6966f84e46ff5eba9a0879e5c8c74534e05e9ac206fa75b59ca9b304d464c7dca6f5ee6b4a5e7190a454fe870b9e994e79af3ab6223dc682412cf51eefe4dadbeefe3f43b217fa01004b8181eab275f633700e68e0ffd375d59dc8840ffaf8a3f1218daa08ccc

#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(84239);

  script_version("1.21");
  script_set_attribute(attribute:"plugin_modification_date", value:"2025/02/12");

  script_name(english:"Debugging Log Report");
  script_summary(english:"Aggregates plugin debugging messages.");

  script_set_attribute(attribute:"synopsis", value:
"This plugin gathers the logs written by other plugins and reports
them.");
  script_set_attribute(attribute:"description", value:
"Logs generated by other plugins are reported by this plugin. Plugin
debugging must be enabled in the policy in order for this plugin
to run.");
  script_set_attribute(attribute:"solution", value:"n/a");
  script_set_attribute(attribute:"risk_factor", value:"None");

  script_set_attribute(attribute:"plugin_publication_date", value:"2015/06/17");

  script_set_attribute(attribute:"plugin_type", value:"combined");
  script_set_attribute(attribute:"agent", value:"all");
  script_set_attribute(attribute:"asset_inventory", value:"True");
  script_set_attribute(attribute:"always_run", value:TRUE);
  script_end_attributes();

  script_category(ACT_END2);
  script_family(english:"Settings");
  script_copyright(english:"This script is Copyright (C) 2015-2025 and is owned by Tenable, Inc. or an Affiliate thereof.");

  # Allow this to run for ninety minutes, unless the timeout is already
  # set above ninety minutes. Mostly for MDM debugging and Windows logging.
  if (int(get_preference("plugins_timeout")) <= 5400)
    script_timeout(5400);

  script_require_keys("global_settings/enable_plugin_debugging");
  exit(0);
}

include("misc_func.inc");
include("global_settings.inc");
include("spad_log_func.inc");

get_kb_item_or_exit("global_settings/enable_plugin_debugging");

#increasing the memory limits for MDM debug scans which can be rather large
if (defined_func("set_mem_limits"))
  set_mem_limits(max_alloc_size:1024*1024*1024, max_program_size:1024*1024*1024);

var logs = spad_log_get_report_attachments();
if(empty_or_null(logs))
  exit(0,"No log information to report.");

# Dump directly to plug-in output for SC / older versions
if(
   !isnull(get_preference("sc_version")) &&
   !get_kb_item("global_settings/enable_plugin_debugging")
)
{
  var report = 'The following plugin debug log(s) have been appended:\n\n';
  foreach var log (logs)
  {
    report += '=====================================================\n';
    report += 'Start log : '+log['name']+'\n';
    report += '=====================================================\n';
    report += log['value'];
    report += '=====================================================\n';
    report += 'End log : '+log['name']+'\n';
    report += '=====================================================\n';
  }
  security_note(port:0,extra:report);
}
else
{
  security_report_with_attachments(
    port        : 0,
    level       : 0,
    extra       : "Plugin debug log(s) have been attached.",
    attachments : logs
  );
}
