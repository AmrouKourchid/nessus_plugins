#TRUSTED 48627b9d3d96c1a8b2f449f3d0f15419639fa82abd028afab9066e58dee5610416708c0a167d04fbaf38bf896db58e7938d41ff981fbc5b597215fa979388a99ccecf823797efa4c8b68f5f7acdd9342305a5bde47a08ba8f353ab82f816cd1ff4984e5f475a5298dba97ebff7a28edf57658feb8aaea68802ac80d40cb69dc07f63944489606697350ebd91e09f9be753fecdf33a8eaad76458540d1ac548fba2baf4687a220555bd5ee1555e7af97e58b9ca614d3acccb3f676c26770c7e57254ddae43374addd3c67cb006cb85a23e49d43bd313dd1412676f870b5d687528073719e9222f064a971d23fb7d9c7c179ded32c099b75c6806eca81c77eb75944b3b5978997b4ace759f3b11e1b64d3497a86e73585af4a996dadedeafb7555de67099af0596d6b1324192c512c9c2ac25a10f6ee7ffd46f2412a53eb78cfa394129fa6ed14826053b0cc192849cbeed12901a597e893bb6472e6eb2a94ab4ae75fbd9f228bd8353e7359a66a23a6361fe18bc5ef991eb1de8b32fbe12ee3e7c3eefcfae8734c031c81999f8d711554fe4dcbe996e75c4d4663e49166b8a64f6017c36e14a794ab6b825b4e81a0da8d237808d3194a6c7010e4027b04fdbefc04be7c8e4211848d2e490c03a61080b8ef229e7d7ecfdbfc8b23c3b6d67d9b310980fa0c1b103cc8edcea04541cc697acd6ce3ae9a265a34de26254dc36177a8
#TRUST-RSA-SHA256 85919dcba8ea949b82ffd1216e2562260aaf4481391305d94d024ebcda15e0c195c3dd6e5410955a829d1267fbfa90183dd323aae8606594a6de61221155cd374698ea259642e3b0cd1d4c3b3fca38c9c2ebc15a73c9a3c160f61ff9a8af33b0193f259eb09b551e77c73751142f97953ed4b406a86d348080e88632cceaf129fe79ac8d0e5a681e79f44041355900093b9da7fca382e64fabb03bf8dc7bf46d3a2c5ad03bd604ae77ac47339d105ff3a91fb8758f54cbe6558fcbd1da23d4cff82e4f6cb1fdb08268f13ce2ad8ebb0ba0e7799f1d882c41de74304142a2568f5db73526ff37abb4091555772604a590053a81f5b1fa92a63ada06a8c565b5b9948af8945fc1c73a3fa0bbdf90dcecf6b1a926c05204e2a1793c283c7d799a2eb6803b61004df5fdecd6fe9b746214b43b56baa2d9863178162c163d9c153397ac2ce65aa9197e783fe596a9f8fab8b492fb39a916dba89f939d6c347877b292a8361b92779df3c97cc5d9133fbd729f4e5ae827c1f2dc316258e44c7da79e8e70138c4ea804e065810d03f9ca9db1028239880942b20a479ed6ceda91c3e5e6193045cf0a9e5cf3d8aba722a99462d3c68211ea75b993bbb85281f8896a204b422fcfbc8137008607c37ece02a1b4f71a9549c30baca46457bc771be4ed1e942033918a7409250206acf5d20e117a6cb485463b08abdb95945f3ce4dea4e619
# (C) Tenable Network Security, Inc.
#
# This script is released under one of the Tenable Script Licenses and may not
# be used from within scripts released under another license without the
# authorization from Tenable Network Security Inc.
#
# Revision: 1.14


#
# Check host information for triggers that the device is most likely supported
# by this file.
#
function is_acos()
{
  if("Advanced Core OS (ACOS)" >< host_info_key_val['post_login_buffer'])
  {
    dbg::detailed_log(lvl:1, src:'is_acos()', msg:'Post login buffer contains "Advanced Core OS (ACOS)".');
    return TRUE;
  }

  return FALSE;
}

function acos_pre_check_fail()
{
  # have we already checked that the host is not acos?
  if(host_info_key_val['host_not_acos'])
  {
    # already checked that host is not acos, no need to check again
    return TRUE;
  }

  if(!empty_or_null(host_info_key_val['showversion_unrecognized']) &&
     host_info_key_val['showversion_unrecognized'] !~ "Advanced Core OS \(ACOS\)")
    return TRUE;

  # Not ACOS if one of the following devices
  if (is_cisco_firepower() ||
      is_cisco_ssh() ||
      is_timos_userauth() ||
      is_cisco_ucos() ||
      is_huawei() ||
      is_panos() ||
      is_cisco_nxos() ||
      is_adtran() ||
      is_asyncos() ||
      is_staros() ||
      is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
  {
    return TRUE;
  }

  return FALSE;
}

function save_acos_fingerprint(os)
{
  report += '\nLocal checks have been enabled for ' + os + '.\n';

  replace_kb_item(name:"Host/OS/showver", value:os);
  replace_kb_item(name:"Host/OS/showver/Confidence", value:100);
  replace_kb_item(name:"Host/OS/showver/Type", value:"load-balancer");
}

function handle_acos(session, use_shell_handler, &channel, cmd_res)
{
  var testing = _FCT_ANON_ARGS[0];

  var os = "A10 Networks Advanced Core OS";

  replace_kb_item(name:"Host/A10_ACOS/show_version", value:cmd_res);

  var ver = pregmatch(pattern:"Advanced Core OS \(ACOS\) version ([\d.]+[^ ]+), build (\d+)", string:cmd_res);
  if(isnull(ver) || isnull(ver[1]) || isnull(ver[2]))
  {
    save_acos_fingerprint(os:os);

    var err_msg = '\nHowever, we could not detect the version from the output of "show version".' +
                  '\nOS Security Patch Assessment is not available.';
    failure_kb_msg = "Could not parse ACOS version from 'show version' output.";
    failure_kb_type = lcx::ISSUES_INFO;
    sshlib::set_support_level(level:sshlib::SSH_LIB_LOCAL_CHECKS_ERROR);
    report += err_msg;

    return TRUE;
  }

  os += ' ' + ver[1] + ' build ' + ver[2];
  replace_kb_item(name:'Host/A10_ACOS/version', value:ver[1]);
  replace_kb_item(name:'Host/A10_ACOS/build', value:ver[2]);
  replace_kb_item(name:"A10/ACOS", value:TRUE);

  # series and device should be on first line of show ver output
  # e.g.
  # Thunder Series Unified Application Service Gateway vThunder
  # AX Series Advanced Traffic Manager AX1000
  # AX Series Advanced Traffic Manager AXSoftAX
  ver = pregmatch(pattern:"^([^ ]+) Series .* ([^\s]+)[\r\n]", string:cmd_res);
  if(!isnull(ver) && !isnull(ver[1]) && !isnull(ver[2]))
  {
    replace_kb_item(name:'Host/A10_ACOS/series', value:ver[1]);
    replace_kb_item(name:'Host/A10_ACOS/device', value:ver[2]);
  }

  save_acos_fingerprint(os:os);

  sshlib::enable_local_checks();
  replace_kb_item(name:'debug/Host/local_checks_enabled_source/includes/ssh_get_info2_acos.static', value: 116);
  report += '\nOS Security Patch Assessment is available for ' + os + '.\n';
}

function handle_not_acos(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  host_info_key_val['host_not_acos'] = TRUE;
  if(!empty_or_null(cmd_res))
  {
    replace_kb_item(name:"Host/showversion", value:cmd_res);
    # store more details for other handlers to use
    host_info_key_val['showversion_unrecognized'] = cmd_res;
  }
}

