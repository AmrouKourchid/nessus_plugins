#TRUSTED 6d0cde760081ddcdbef312c4d7f74bcce2eb0ca68bd525a1c77ab4c460f97cc2951f7721f6a1db192d61d37d5ec9119e13010043786c633c7cd04d7473eaa7c11c042c4d915e314f39d2c1a0d8418aebf31af022e1ef2e8008976ca59f7ad95a079b0c9863d219212099aae1aad761af176410f7d24aff16eb6693d76b8d6f5d83727245e3ef61c046037fc61fa68199d0e8254ba1ec4f78ec0de69c6f2ab45611a3fbde586dc66587639c849ee18f47e4a67d941bc7e88b36e2385cd36275335ffea62462d4cdf94b204e081700198e241e38df475f95bba954124debc1b7a26dd14cb329488f17ee7b2c65bd5bd9d33ca628b8f476282ea706fa338b68634b44b9b44ce7f2077c450935393772919e6045e2c838ce999738cfa545b7b802d96547a2079b90505d57cf105f42405dcae2bb921fb44ef3386c49adc0c8d8bb2f8b21ad1c8b472ea3f3dfd3a37a0533fa4ff32a2be5c6fb8d6b83977a18ee0ba7ba0e6e6bccea93ebf10cac69d6883758b6f0fbc08624763a67494f5c7b18fa4a738722d785f1d2a723b334d8f942387bc5b7e7ff35a2f15bb587ca40b2f490a69eefc466aa8dd14b47286ca5537a69a88543f827e9162c272666d6b33564feee200ee2dbf27d89560bc5b34bb76ff1b6b7defa8f3350904a8d2efc7c8af3a45f8bc6dcaf39859e961e3b8657b27617ff2865f80ea5b33e7021566ba71f4cc457
#TRUST-RSA-SHA256 2c8aa3e02447644a2bdb5485463ab268b08f7dfcf929e304440f79614cfbbfa9862603c894c58d39188288e77fae7708ae373b1e130f2710e9c7668ce9e41514b406de6e66db2de345de21c6afdf216c0d85bd358837145dff5b267d0ac336c04488096d73480834069a52be5b36c851ab4982366ea482940fed36399bf464628cfe3e276af7db8b5d69de02da2fb846f02b9d4eeae9046c4d68f8f2bbe39413a0d1965f83ecdfa2d3f512f349ad3aab0b1c54624abd11da79253f42c3596e7bc603c80fbdca473ae8bfd56c664a22581223567c4faf01eda6632e3945b8fc19328c6f9ce5bc7bf67753ab83240ad067d44b38b6245c5b96659945957df4208a0ab96d27f94673cb07ad10b296e21880ef295fe070750647dc2394f8dbb4cbd31785e7eda8e029eb78436d948e5fe329c0175c4501d07a10edb6b2f8f7d0a0b9ee7462a55e47e1c3d8925799490f88bdcc06021d674744cc7ea19a407d202d2caf4740a8aa19501d26b3732e04079f705702741faddce8c677a9548254470daed871c1cde35f724b33e136ed5c7f424bad8cde8756dd93e489efd1fd99884cbdbb5cc704c5388ed7f8121d2d044ad301b1fc98ec144348bae08fc52f4f6d383f0a5533e49543bc490eeeae684d82fc73cc603fdc064e769a57418468f1812dab5c5bc137e5dc796b1bf7df48bf7e6a6fc8d0101af1fa93f8a6dbeeb456e64b5f

# (C) Tenable Network Security, Inc.
#
# This script is released under one of the Tenable Script Licenses and may not
# be used from within scripts released under another license without the
# authorization from Tenable Network Security Inc.
#
# Revision: 1.17

function asa_cx_pre_check_fail()
{
  # have we already checked that the host is not asa?
  if(host_info_key_val['host_not_asa_cx'])
  {
    # already checked that host is not asa, no need to check again
    return TRUE;
  }

  if(!empty_or_null(host_info_key_val['showversion_unrecognized']) &&
     host_info_key_val['showversion_unrecognized'] !~ "^Cisco ASA CX Platform")
    return TRUE;

  # Not ASA CX if one of the following devices
  if (is_cisco_firepower() ||
      is_cisco_nxos() ||
      is_cisco_ucos() ||
      is_timos_userauth() ||
      is_huawei() ||
      is_panos() ||
      is_acos() ||
      is_adtran() ||
      is_staros() ||
      is_ivanti_sentry() ||
      is_screenos() ||
      is_exos() ||
      is_qnap_standard() ||
      is_dell_idrac() ||
      is_infoblox_nios() ||
      is_aruba_cppm() ||
      is_arrayos())
  {
    return TRUE;
  }

  return FALSE;
}

function handle_asa_cx(session, use_shell_handler, &channel, cmd_res)
{
  local_var asa_cx_ver, asa_cx, show_running, cmd_output, priv;
  asa_cx = pgrep(pattern:"^Cisco ASA CX Platform[0-9\. ]+.*", string:cmd_res);
  report += '\n' + 'Local checks have been enabled for Cisco ASA.\n';
  if(!asa_cx)
  {
    failure_kb_msg =
      'The device appears to be Cisco ASA-CX, however it was not possible\n'+
      'to determine the installed version. OS Security Patch Assessment is not available.';
    failure_kb_type = lcx::ISSUES_INFO;
    report += '\n' + failure_kb_msg + '\n';
    sshlib::set_support_level(level:sshlib::SSH_LIB_LOCAL_CHECKS_ERROR);
    return NULL;
  }
  # extract version
  asa_cx_ver = pregmatch(string:asa_cx, pattern:"Platform\s+([0-9\.]+)\s*(\([0-9\.]+\))?");
  if (asa_cx_ver)
  {
    asa_cx_ver = asa_cx_ver[1] + asa_cx_ver[2];
    set_kb_item(name:"Host/Cisco/ASA-CX/Version", value:asa_cx_ver);
  }

  # OS fingerprinting
  set_kb_item(name:"Host/OS/showver", value:asa_cx);
  set_kb_item(name:"Host/OS/showver/Confidence", value:100);
  set_kb_item(name:"Host/OS/showver/Type", value:"embedded");

  # local check information
  set_kb_item(name:"Host/Cisco/ASA-CX", value:asa_cx);
  sshlib::enable_local_checks();
  replace_kb_item(name:'debug/Host/local_checks_enabled_source/includes/ssh_get_info2_cisco_asa_cx.static', value: 79);
  set_kb_item(name:"Host/Cisco/show_ver", value:cmd_res);
  show_running = run_command(
                  cmd:"show running",
                  session:session,
                  use_shell_handler:use_shell_handler,
                  channel:channel);
  if (show_running) set_kb_item(name:"Secret/Host/Cisco/show_running", value:show_running);

  var max_privs = 0;
  cmd_output = run_command(
                cmd:'show privilege',
                session:session,
                use_shell_handler:use_shell_handler,
                channel:channel,
                force_priv_escl:TRUE);
  if(cmd_output && "Current privilege level is" >< cmd_output)
  {
    priv = pregmatch(pattern:'Current privilege level is ([0-9]*)', string:cmd_output);
    if(priv && priv[1])
    {
      priv = int(priv[1]);

      if(priv == 15)
        max_privs = 1;

      set_kb_item(name:'Host/Cisco/show_privilege', value:priv);
    }
  }

  if(!isnull(session))
    replace_kb_item(name:"Host/Auth/SSH/" + session.get_port() + "/MaxPrivs", value:max_privs);

  cmd_output = run_command(
                cmd:'show running-config',
                session:session,
                use_shell_handler:use_shell_handler,
                channel:channel,
                force_priv_escl:TRUE);
  if(cmd_output)
    set_kb_item(name:"Secret/Host/Cisco/Config/show_running-config", value:cmd_output);
  cmd_output = run_command(
                cmd:'show running-config all',
                session:session,
                use_shell_handler:use_shell_handler,
                channel:channel,
                force_priv_escl:TRUE);
  if(cmd_output)
    set_kb_item(name:"Secret/Host/Cisco/Config/show_running-config_all", value:cmd_output);

  report += '\nOS Security Patch Assessment is available for this host.';
}

#
# callback for systems without "asa..." in show version
#
function handle_not_asa_cx(session, use_shell_handler, &channel, cmd_res)
{
  if (use_shell_handler) store_shell_info();
  if(!empty_or_null(cmd_res))
  {
    replace_kb_item(name:"Host/showversion", value:cmd_res);
    # store more details for other handlers to use
    host_info_key_val['showversion_unrecognized'] = cmd_res;
    host_info_key_val['host_not_asa_cx'] = TRUE;
  }
}
